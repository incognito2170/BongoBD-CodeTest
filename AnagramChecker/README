# Source code for Anagram check with Local Unit Test code.
# Unit test code is placed under "BongoBD-CodeTest/AnagramChecker/app/src/test/java/com/bongotest/anagramchecker/".

# Q1) Write a function that detects if two strings are anagram e.g. ‘bleat’ and ‘table’ are anagrams but ‘eat’ and ‘tar’ are not.

Answer :

 static boolean isAnagram(String firstWord, String secondWord) {
        if (null == firstWord || null == secondWord || firstWord.equals("") || secondWord.equals("")) {
            return false;
        } else if (firstWord.length() != secondWord.length()) {
            return false;
        }

        String firstString = firstWord.toLowerCase();
        String secondString = secondWord.toLowerCase();

        Map<Character, Integer> occurrencesMap = new HashMap<>();

        for (int i = 0; i < firstString.length(); i++) {
            char charFromLeft = firstString.charAt(i);
            int numberOfCharsInLeft = occurrencesMap.containsKey(charFromLeft) ? Objects.requireNonNull(occurrencesMap.get(charFromLeft)) : 0;
            occurrencesMap.put(charFromLeft, ++numberOfCharsInLeft);

            char charFromRight = secondString.charAt(i);
            int numberOfCharsInRight = occurrencesMap.containsKey(charFromRight) ? Objects.requireNonNull(occurrencesMap.get(charFromRight)) : 0;
            occurrencesMap.put(charFromRight, --numberOfCharsInRight);
        }

        for (int occurrence : occurrencesMap.values()) {
            if (occurrence != 0) {
                return false;
            }
        }

        return true;
    }
